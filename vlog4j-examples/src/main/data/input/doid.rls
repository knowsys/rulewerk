@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix wdqs: <https://query.wikidata.org/> .

@source doidTriple(3): load-rdf("src/main/data/input/doid.nt.gz") .
@source diseaseId(2): sparql(wdqs:sparql, "disease,doid", "?disease wdt:P699 ?doid .") .
@source recentDeaths(1): sparql(wdqs:sparql, "human", 
   '''?human wdt:P31 wd:Q5;
      wdt:P570 ?deathDate .
      FILTER (YEAR(?deathDate) = 2018)''') .
@source recentDeathsCause(2): sparql(wdqs:sparql, "human,causeOfDeath", 
   '''?human wdt:P31 wd:Q5;
      wdt:P570 ?deathDate ;
      wdt:P509 ?causeOfDeath . 
      FILTER (YEAR(?deathDate) = 2018)''') .

% Combine recent death data (infer "unknown" cause if no cause given):
deathCause(?X, ?Z) :- recentDeathsCause(?X, ?Z) .
deathCause(?X, !Z) :- recentDeaths(?X) .

% Mark Wikidata diseases that have a DOID: 
hasDoid(?X) :- diseaseId(?X, ?DoidId) . 

% Relate DOID string ID (used on Wikidata) to DOID IRI (used in DOID ontology)
doid(?Iri, ?DoidId) :- doidTriple(?Iri, <http://www.geneontology.org/formats/oboInOwl#id>,?DoidId) .

% Compute transitive closure of DOID subclass hierarchy
diseaseHierarchy(?X, ?Y) :- doidTriple(?X, rdfs:subClassOf, ?Y) .
diseaseHierarchy(?X, ?Z) :- diseaseHierarchy(?X, ?Y), doidTriple(?Y, rdfs:subClassOf, ?Z) .

% Find DOID ids for all subclasses of cancer:
cancerDisease(?Xdoid) :- diseaseHierarchy(?X, ?Y), doid(?Y, "DOID:162"), doid(?X, ?Xdoid) .

% Compute who died of cancer and who died of something else (including diseases unknown to DOID):
humansWhoDiedOfCancer(?X) :- deathCause(?X, ?Y), diseaseId(?Y, ?Z), cancerDisease(?Z) .
humansWhoDiedOfNoncancer(?X) :- deathCause(?X, ?Y), diseaseId(?Y, ?Z), ~cancerDisease(?Z) .
humansWhoDiedOfNoncancer(?X) :- deathCause(?X, ?Y), ~hasDoid(?Y) .

